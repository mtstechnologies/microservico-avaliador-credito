#Define o nome da aplicacao como mscloudgateway. Esse nome e utilizado pelo Eureka Server (ou outro servidor de descoberta) 
#para identificar e registrar o microservico. E importante para identificar este microservico entre os outros que podem estar rodando no ambiente.
spring.application.name=mscloudgateway
#Ativa a descoberta de servicos pelo Spring Cloud Gateway usando o Eureka (ou outro servidor de descoberta que voce esteja utilizando). 
#Com essa configuracao, o Gateway pode automaticamente rotear chamadas para outros servicos registrados no Eureka, sem precisar especificar manualmente cada rota.
spring.cloud.gateway.discovery.locator.enabled=true
#Esta configuracao forca todos os service-ids a serem interpretados em letras minusculas. Essa padronizacao ajuda a evitar problemas 
#quando os nomes dos servicos possuem letras maiusculas e minusculas, o que pode causar erros, pois os service-ids sao geralmente 
#tratados de forma case-sensitive (sensiveis a maiusculas e minusculas).
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#Define a porta em que o microservico Gateway vai rodar localmente. Neste caso, o Gateway sera acessivel atraves da porta 8080.
server.port=8080
#Informa ao cliente Eureka que ele deve buscar o registro de servicos do Eureka Server. Com true, o Gateway busca a lista de servicos 
#registrados e suas informacoes de localizacao, permitindo o roteamento dinamico para outros servicos.
eureka.client.fetch-registry=true
#Esta configuracao permite que o microservico se registre no Eureka Server. Com isso, o mscloudgateway sera registrado como um servico
# no Eureka, permitindo que outros microservicos descubram e interajam com ele.
eureka.client.register-with-eureka=true
#Define a URL do Eureka Server que o cliente Eureka usara para se conectar. Neste caso, o servidor Eureka esta rodando localmente 
#na porta 8761, e o caminho /eureka indica a URL base da API do Eureka Server.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#eureka.instance.hostname=localhost
#eureka.instance.prefer-ip-address=true

#spring.cloud.inetutils.ignored-interfaces='docker0'